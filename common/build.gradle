import org.gradle.api.publish.internal.DefaultPublishingExtension

plugins {
    id 'maven-publish'
    id 'multiloader-common'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}

base {
    archivesName = "common"
}

minecraft {
    version(minecraft_version)
    def aw = file("src/main/resources/${mod_id}.accesswidener")
    if(aw.exists()){
        accessWideners(aw)
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://maven.terraformersmc.com/")
    }
}

dependencies {
    compileOnly("mezz.jei:jei-$minecraft_version-common-api:$jei_version")
    compileOnly "dev.emi:emi-xplat-mojmap:$emi_version+$minecraft_version:api"

    compileOnly group:'org.spongepowered', name:'mixin', version:'0.8.5'
}

configurations {
    commonJava {
        canBeResolved = false
        canBeConsumed = true
    }
    commonResources {
        canBeResolved = false
        canBeConsumed = true
    }
}

artifacts {
    commonJava sourceSets.main.java.sourceDirectories.singleFile
    commonResources sourceSets.main.resources.sourceDirectories.singleFile
}


task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}


task customJar(type: Jar) {
    from sourceSets.main.output
    setArchiveClassifier("api")
    exclude 'org/mangorage/tiab/common/integration/**'
}

// Ensure customJar runs before generateMetadataFileForMavenJavaPublication
tasks.named('generateMetadataFileForMavenJavaPublication') {
    dependsOn customJar
}

// Ensuring the custom jar is built during the build process
tasks.named('build') {
    dependsOn customJar
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            // Use project.tasks.getByName to reference the customJar task
            artifact customJar {
                // Specify the filename for the published artifact
                afterEvaluate {
                    groupId = 'org.mangorage.tiab'
                    //artifactId = 'common'
                    version = '6.0.0'
                }
            }
        }
    }

    repositories {
        maven {
            url = uri("$buildDir/repo")
        }
    }
}